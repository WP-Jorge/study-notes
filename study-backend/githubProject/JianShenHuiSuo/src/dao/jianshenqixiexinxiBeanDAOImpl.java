package dao;

import bean.jianshenqixiexinxiBean;
import bean.jianshenqixiexinxiBeanExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class jianshenqixiexinxiBeanDAOImpl extends SqlMapClientDaoSupport implements jianshenqixiexinxiBeanDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public jianshenqixiexinxiBeanDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int countByExample(jianshenqixiexinxiBeanExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("jianshenqixiexinxi.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int deleteByExample(jianshenqixiexinxiBeanExample example) {
        int rows = getSqlMapClientTemplate().delete("jianshenqixiexinxi.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int deleteByPrimaryKey(Integer id) {
        jianshenqixiexinxiBean key = new jianshenqixiexinxiBean();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("jianshenqixiexinxi.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public void insert(jianshenqixiexinxiBean record) {
        getSqlMapClientTemplate().insert("jianshenqixiexinxi.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public void insertSelective(jianshenqixiexinxiBean record) {
        getSqlMapClientTemplate().insert("jianshenqixiexinxi.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    @SuppressWarnings("unchecked")
    public List<jianshenqixiexinxiBean> selectByExample(jianshenqixiexinxiBeanExample example) {
        List<jianshenqixiexinxiBean> list = getSqlMapClientTemplate().queryForList("jianshenqixiexinxi.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public jianshenqixiexinxiBean selectByPrimaryKey(Integer id) {
        jianshenqixiexinxiBean key = new jianshenqixiexinxiBean();
        key.setId(id);
        jianshenqixiexinxiBean record = (jianshenqixiexinxiBean) getSqlMapClientTemplate().queryForObject("jianshenqixiexinxi.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int updateByExampleSelective(jianshenqixiexinxiBean record, jianshenqixiexinxiBeanExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("jianshenqixiexinxi.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int updateByExample(jianshenqixiexinxiBean record, jianshenqixiexinxiBeanExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("jianshenqixiexinxi.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int updateByPrimaryKeySelective(jianshenqixiexinxiBean record) {
        int rows = getSqlMapClientTemplate().update("jianshenqixiexinxi.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    public int updateByPrimaryKey(jianshenqixiexinxiBean record) {
        int rows = getSqlMapClientTemplate().update("jianshenqixiexinxi.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table jianshenqixiexinxi
     *
     * @ibatorgenerated Tue Dec 26 10:25:44 CST 2017
     */
    private static class UpdateByExampleParms extends jianshenqixiexinxiBeanExample {
        private Object record;

        public UpdateByExampleParms(Object record, jianshenqixiexinxiBeanExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}