<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.boxmusic.mapper.PlaylistMapper">
	<!--		<cache-ref namespace="com.example.boxmusic.mapper.UserMapper"/>-->
	<!--		<cache-ref namespace="com.example.boxmusic.mapper.PlaylistMapper"/>-->
	<cache-ref namespace="com.example.boxmusic.mapper.MusicMapper"/>
	
	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.example.boxmusic.pojo.entity.Playlist">
		<id column="playlist_id" property="playlistId"/>
		<result column="playlist_name" property="playlistName"/>
		<result column="playlist_pic" property="playlistPic"/>
		<result column="playlist_description" property="playlistDescription"/>
		<result column="user_id" property="userId"/>
		<result column="opened" property="opened"/>
		<result column="total_views" property="totalViews"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	<resultMap id="PlaylistWithCategoryAndUserResultMap" type="com.example.boxmusic.pojo.vo.PlaylistVO">
		<association property="user" javaType="com.example.boxmusic.pojo.vo.PureUserVO" column="userId=user_id"
					 select="getUserWithUserId">
		</association>
		<collection property="categories" javaType="java.util.ArrayList" column="playlistId=playlist_id"
					select="getCategoriesWithPlaylistId">
		</collection>
	</resultMap>
	<insert id="addPlaylistToCollection">
		insert into user_playlist (user_id, playlist_id)
		values (#{userId}, #{playlistId})
	</insert>
	<insert id="addMusicToPlaylist">
		insert into music_playlist (music_id, playlist_id)
		values (#{musicId}, #{playlistId})
	</insert>
	<delete id="deleteUserPlaylists">
		delete from user_playlist where user_id = #{userId} and playlist_id in (
		<foreach collection="playlistIds" item="item" index="index" separator=",">
			#{item}
		</foreach>
		)
	</delete>
	<delete id="deleteMusicFromPlaylist">
		delete
		from music_playlist
		where music_id = #{musicId}
		  and playlist_id = #{playlistId}
	</delete>
	
	<select id="getPlaylistsByPlaylistNamePage" resultType="com.example.boxmusic.pojo.vo.PlaylistVO"
			resultMap="PlaylistWithUserAndCategoryResultMap">
		select distinct *
		from playlist
		where playlist_name like concat('%', #{playlistName}
			, '%')
	</select>
	
	<resultMap id="PlaylistWithUserAndCategoryResultMap" type="com.example.boxmusic.pojo.vo.PlaylistVO">
		<association property="user" javaType="com.example.boxmusic.pojo.vo.PureUserVO" column="userId=user_id"
					 select="getUserWithUserId">
		</association>
		<collection property="categories" javaType="java.util.ArrayList" column="playlistId=playlist_id"
					select="getCategoriesWithPlaylistId">
		</collection>
	</resultMap>
	
	<resultMap id="PlaylistWithUserAndCategoryAndMusicResultMap"
			   type="com.example.boxmusic.pojo.vo.PlaylistWithMusicVO">
		<association property="user" javaType="com.example.boxmusic.pojo.vo.PureUserVO" column="userId=user_id"
					 select="getUserWithUserId">
		</association>
		<collection property="categories" javaType="java.util.ArrayList" column="playlistId=playlist_id"
					select="getCategoriesWithPlaylistId">
		</collection>
		<collection property="musics" javaType="java.util.ArrayList" column="playlistId=playlist_id"
					select="getMusicsWithPlaylistId">
		</collection>
	</resultMap>
	
	<select id="getUserWithUserId" resultMap="com.example.boxmusic.mapper.UserMapper.PureUserVOResultMap">
		select *
		from user
		where user.user_id = #{userId}
	</select>
	
	<select id="getCategoriesWithPlaylistId" resultMap="com.example.boxmusic.mapper.CategoryMapper.BaseResultMap">
		select *
		from playlist,
			 category,
			 playlist_category
		where playlist.playlist_id = playlist_category.playlist_id
		  and category.category_id = playlist_category.category_id
		  and playlist.playlist_id = #{playlistId}
	</select>
	<select id="getMusicsWithPlaylistId"
			resultMap="com.example.boxmusic.mapper.MusicMapper.MusicWithCategoryAndSingerAndAlbumResultMap">
		select *
		from music,
			 music_playlist
		where music.music_id = music_playlist.music_id
		  and playlist_id = #{playlistId}
	</select>
	
	<select id="getPlaylistsByTotalViewsSortPage" resultType="com.example.boxmusic.pojo.vo.PlaylistWithMusicVO"
			resultMap="BaseResultMap">
		select distinct playlist.playlist_id,
						playlist.playlist_description,
						playlist.playlist_pic,
						category.category_name
		from category,
			 playlist,
			 playlist_category
		where playlist.playlist_id = playlist_category.playlist_id
		  and playlist_category.category_id = category.category_id
		  and category.category_id in (select category.category_id
									   from playlist_category,
											category
									   where playlist_category.category_id = category.category_id
										 and playlist_category.playlist_id in (select playlist.playlist_id
																			   from user_playlist,
																					playlist
																			   where user_playlist.playlist_id = playlist.playlist_id
																				 and user_playlist.user_id = #{userId}))
		group by playlist.playlist_id
		order by rand() limit 8
	</select>
	<select id="getPlaylistsByTotalViewsSortPage2" resultType="com.example.boxmusic.pojo.vo.PlaylistWithMusicVO"
			resultMap="BaseResultMap">
		select distinct *
		from playlist
		where opened = 1
		order by rand() limit 10
	</select>
	<select id="getPlaylistsByCategoryIdPage" resultType="com.example.boxmusic.pojo.vo.PlaylistVO"
			resultMap="PlaylistWithUserAndCategoryResultMap">
		select *
		from playlist,
			 playlist_category,
			 category
		where playlist.playlist_id = playlist_category.playlist_id
		  and playlist_category.category_id = category.category_id
		  and category.category_id = #{categoryId}
		  and playlist.opened = 1
	</select>
	<select id="getSimplePlaylistsWithMusics" resultType="com.example.boxmusic.pojo.vo.PlaylistWithMusicVO"
			resultMap="PlaylistWithUserAndCategoryAndMusicResultMap">
		select *
		from playlist
		where user_id = #{userId}
		  and opened = 0
	</select>
	<select id="getPlaylistsByPlaylistNameAndUserIdPage" resultType="com.example.boxmusic.pojo.vo.PlaylistVO"
			resultMap="PlaylistWithUserAndCategoryAndMusicResultMap">
		select distinct user_playlist_id,
						playlist.playlist_id,
						playlist_name,
						playlist_pic,
						playlist_description,
						playlist.user_id,
						opened,
						total_views,
						user_playlist_id
		from playlist,
			 user_playlist
		where playlist.playlist_id = user_playlist.playlist_id
		  and playlist_name like concat('%', #{playlistName}, '%')
		  and user_playlist.user_id = #{userId}
	</select>

</mapper>
