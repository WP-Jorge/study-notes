<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.boxmusic.mapper.MusicMapper">
	<cache-ref namespace="com.example.boxmusic.mapper.MusicMapper"/>
	
	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.example.boxmusic.pojo.entity.Music">
		<id column="music_id" property="musicId"/>
		<result column="music_title" property="musicTitle"/>
		<result column="lyric" property="lyric"/>
		<result column="album_id" property="albumId"/>
		<result column="duration" property="duration"/>
		<result column="size" property="size"/>
		<result column="level" property="level"/>
		<result column="music_format" property="musicFormat"/>
		<result column="bitrate" property="bitrate"/>
		<result column="total_views" property="totalViews"/>
		<result column="music_url" property="musicUrl"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="deleted" property="deleted"/>
	</resultMap>
	<select id="getMusicsByMusicTitlePage" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		select distinct *
		from music
		where deleted = 0
		  and music_title like concat('%', #{musicTitle}
			, '%')
	</select>
	
	<resultMap id="MusicWithCategoryAndSingerAndAlbumResultMap" type="com.example.boxmusic.pojo.vo.MusicVO">
		<association property="album" javaType="com.example.boxmusic.pojo.vo.AlbumVO" column="albumId=album_id"
					 select="getAlbumWithAlbumId">
		</association>
		<collection property="categories" javaType="java.util.ArrayList" column="musicId=music_id"
					select="getCategoriesWithMusicId">
		</collection>
		<collection property="singers" javaType="java.util.ArrayList" column="musicId=music_id"
					select="getSingersWithMusicId">
		</collection>
	</resultMap>
	
	<select id="getAlbumWithAlbumId" resultMap="com.example.boxmusic.mapper.AlbumMapper.AlbumVOResultMap">
		select *
		from album
		where album_id = #{albumId}
	</select>
	
	<select id="getCategoriesWithMusicId" resultMap="com.example.boxmusic.mapper.CategoryMapper.BaseResultMap">
		select *
		from music,
			 category,
			 music_category
		where music.music_id = music_category.music_id
		  and category.category_id = music_category.category_id
		  and music.music_id = #{musicId}
	</select>
	
	<select id="getSingersWithMusicId" resultMap="com.example.boxmusic.mapper.SingerMapper.BaseResultMap">
		select *
		from music,
			 singer,
			 music_singer
		where music.music_id = music_singer.music_id
		  and singer.singer_id = music_singer.singer_id
		  and music.music_id = #{musicId}
	</select>
	
	<select id="getMusicsByTotalViewsSortPage" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		-- 		select distinct *
-- 		from music
-- 		where deleted = 0
-- 		order by total_views desc
		select distinct music.music_id,
						music.music_title,
						music.lyric,
						music.album_id,
						music.duration,
						music.size,
						music.level,
						music.music_format,
						music.bitrate,
						music.total_views,
						music.music_url,
						music.deleted,
						collection.collection_id,
						category.category_id,
						category.category_type
		from music,
			 collection,
			 category,
			 music_category
		where deleted = 0
		  and category.category_id = music_category.category_id
		  and music.music_id = music_category.music_id
		  and music_category.category_id in (select category.category_id
											 from category,
												  user,
												  music,
												  music_category,
												  collection
											 where collection.music_id = music.music_id
											   and music_category.music_id = music.music_id
											   and music_category.category_id = category.category_id
											   and user.user_id = collection.user_id
											   and user.user_id = #{userId})
		group by music.music_id
		order by rand() limit 8
	</select>
	<select id="getMusicsByTotalViewsSortPage2" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		select distinct *
		from music
		where deleted = 0
		order by rand() limit 10
	</select>
	<select id="getMusicsByCreateTimeSortPage" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		select *
		from music
		order by create_time desc
	</select>
	
	<select id="getMusicsByCategoryIdPage" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		select *
		from music,
			 music_category,
			 category
		where music.music_id = music_category.music_id
		  and music_category.category_id = category.category_id
		  and category.category_id = #{categoryId}
		  and music.deleted = 0
	</select>
	<select id="getMusicsByPlaylistIdPage" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		select *
		from music,
			 music_playlist,
			 playlist
		where music.music_id = music_playlist.music_id
		  and music_playlist.playlist_id = playlist.playlist_id
		  and playlist.playlist_id = #{playlistId}
		  and music.deleted = 0
	</select>
	<select id="getMusicsByAlbumIdPage" resultType="com.example.boxmusic.pojo.vo.MusicVO"
			resultMap="MusicWithCategoryAndSingerAndAlbumResultMap">
		select *
		from music
		where music.album_id = #{albumId}
		  and music.deleted = 0
	</select>
	<select id="getMusicLevelCounts" resultType="com.example.boxmusic.pojo.vo.MusicLevelCountsVO">
		select level, count(*) as num
		from music
		group by level
	</select>
	<select id="getCategoryMusicCounts" resultType="com.example.boxmusic.pojo.vo.CategoryMusicCountsVO">
		select category_name, count(*) as num
		from music,
			 music_category,
			 category
		where music.music_id = music_category.music_id
		  and music_category.category_id = category.category_id
		group by category_name
	</select>

</mapper>
