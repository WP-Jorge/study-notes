<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--springmvc的配置文件，声明controller和其它web相关的对象-->
    <context:component-scan base-package="controller"/>

    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置视图解析器-->
    <!--第二种处理静态资源的方式
        mvc :resources加入后框架会创建ResourceHttpRequestHandler这 个处理器对象。
        让这个对象处理静态资源的访问，不依赖tomcat服务器。
        mapping:访问静态资源的uri地址，使用通配符**
        location :静态资源在你的项目中的目录位置。
        images/** :表示images/p1.jpg ， images/user/logo.gif ，images/order/list . png
    -->
    <mvc:resources mapping="/images/**" location="/images/"/>

    <mvc:annotation-driven/>
    <!--
        1.响应ajax请求，返 回json
        2.解决静态资源访问问题。
    -->
</beans>