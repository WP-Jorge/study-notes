<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <servlet>
        <servlet-name>springmvcServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>springmvcServlet</servlet-name>
        <!--使用”/“后会替代tomcat中的default-->
        <!--而tomcat中的default是用来处理静态资源的，替代后静态资源无法访问-->
        <!--导致所有的静态资源都给DispatcherServlet处理，默认情况 下DispatcherServlet没有处理静态资源的能力。-->
        <!--没有控制器对象能处理静态资源的访问。所以静态资源( html，js，图片，css)都是404.-->
        <!--动态资源some .do是可以访问，的因为我们程序中有MyController控制器对象，能处理some . do请求。-->
        <!--<url-pattern>*.do</url-pattern>-->

        <!--然后去springmvc.xml中配置静态资源访问的设置-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>